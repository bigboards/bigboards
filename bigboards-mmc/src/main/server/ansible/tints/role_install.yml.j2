{% if item.pre_install is defined %}{{ lookup('file', tint.path + '/' + item.pre_install) }}{% endif %}

- name: make sure the role data directory exists
  file:
    state: "directory"
    path: "{{'{{'}} data_path {{'}}'}}/{{ item.name }}"
    owner: bb
    mode: 0755

- name: make sure the role template directory exists
  file:
    state: "directory"
    path: "{{'{{'}} config_path {{'}}'}}/{{ item.name }}"

- name: make sure the role template directory is empty
  shell: "rm -rf {{'{{'}} config_path {{'}}'}}/{{ item.name }}/*"

- name: make sure the configuration files are available
  template:
    src: "{{ '{{' }} item {{ '}}' }}"
    dest: "{{'{{'}} config_path {{'}}'}}/{{ item.name }}/"
  with_fileglob:
    - ../templates/*

- name: make sure the docker image is the latest one
  sudo: yes
  shell: docker pull {{ item.image }}-{{ansible_machine}}

- name: make sure the container exists
  sudo: yes
  docker:
    docker_api_version: "1.15"
    name: "{{ item.name }}"
    net: "host"
    ports: "{{ item.ports|join(',') }}"
    publish_all_ports: "yes"
    volumes: "{{ '{{' }} config_path {{ '}}/' + item.config.host_path }}:{{ item.config.container_path }},{{ '{{' }} tmp_path {{ '}}/' + item.name }}:/tmp,{{ '{{' }} data_path {{ '}}/' + item.name }}:/data"
    memory_limit: 1073741824
    image: "{{ item.image }}-{{ansible_machine}}"
    command: "{{ item.command }}"
    state: running

- name: make sure the init file is available
  copy: src={{ item.name }}.conf dest=/etc/init/{{ item.name }}.conf
  sudo: yes

- name: make sure the service is started at boot
  service: name={{ item.name }} enabled=yes state=started
  sudo: yes

{% if item.post_install is defined %}{{ lookup('file', tint.path + '/' + item.post_install) }}{% endif %}