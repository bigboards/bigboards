---
- hosts: local
  sudo: yes
  tasks:
    - name: be sure the tint directory exists
      file: state=directory path=/opt/bb/tints.d/stack

    - name: be sure the tint sources are available
      git: repo={{ tint.uri }} dest={{ tint.path }}

###############################################################################
##
## Structure
##
###############################################################################

    - name: remove the work directory so we can start with a clean slate
      command: rm -rf {{ tint.path }}/work removes={{ tint.path }}/work

    - name: be sure the directory structure for the tint playbook has been created
      file:
        state: "directory"
        path: "{{ item }}"
      with_items:
        - "{{ tint.path }}/work"
        - "{{ tint.path }}/work/roles"
        - "{{ tint.path }}/work/group_vars"

###############################################################################
##
## Inventory
##
###############################################################################

    - name: replace variables within tint.yml to ansible format
      shell: sed "s/{{\(.*\)}}/\\\\{\\\\{ \1 \\\\}\\\\}/g" <"{{ tint.path }}/tint.yml" >"{{ tint.path }}/work/_tint.yml"

    - name: be sure the tint metadata file is read
      include_vars: "{{ tint.path }}/work/_tint.yml"

    - name: create the group_vars file
      template:
        src: "group_vars_all.j2"
        dest: "{{ tint.path }}/work/group_vars/all"

    - name: create the hosts file
      template:
        src: "hosts.j2"
        dest: "{{ tint.path }}/work/_hosts"

###############################################################################
##
## Playbooks
##
###############################################################################

    - name: create the install playbook
      template:
        src: "install.yml.j2"
        dest: "{{ tint.path }}/work/_install.yml"

    - name: create the uninstall playbook
      template:
        src: "uninstall.yml.j2"
        dest: "{{ tint.path }}/work/_uninstall.yml"


###############################################################################
##
## Roles
##
###############################################################################

    - file:
        state: "directory"
        path: "{{ tint.path }}/work/roles/{{ item.key }}"
      with_dict: stack.containers

    - file:
        state: "directory"
        path: "{{ tint.path }}/work/roles/{{ item.key }}/tasks"
      with_dict: stack.containers

    - file:
        state: "directory"
        path: "{{ tint.path }}/work/roles/{{ item.key }}/files"
      with_dict: stack.containers

    - name: create the role install task file
      template:
        src: "docker-init.conf.j2"
        dest: "{{ tint.path }}/work/roles/{{ item.key }}/files/{{ item.key }}.conf"
      with_dict: stack.containers

    - name: create the role main task file
      template:
        src: "role_main.yml.j2"
        dest: "{{ tint.path }}/work/roles/{{ item.key }}/tasks/main.yml"
      with_dict: stack.containers

    - name: create the role install task file
      template:
        src: "role_install.yml.j2"
        dest: "{{ tint.path }}/work/roles/{{ item.key }}/tasks/install.yml"
      with_dict: stack.containers

    - name: create the role uninstall task file
      template:
        src: "role_uninstall.yml.j2"
        dest: "{{ tint.path }}/work/roles/{{ item.key }}/tasks/uninstall.yml"
      with_dict: stack.containers

    - stat:
        path: "{{ tint.path }}/config/all/"
      register: st

    - name: copy the general configuration templates from the tint to the work directory
      copy:
        src: "{{ tint.path }}/config/all/"
        dest: "{{ tint.path }}/work/roles/{{ item.key }}/templates"
      with_dict: stack.containers
      when: st.stat.exists

    - stat:
        path: "{{ tint.path }}/config/{{ item.key }}/"
      register: role_config
      with_dict: stack.containers

    - debug:
        var: role_config

    - name: copy the configuration templates from the tint to the work directory
      copy:
        src: "{{ tint.path }}/config/{{ item.item.key }}/"
        dest: "{{ tint.path }}/work/roles/{{ item.item.key }}/templates/"
      when: item.stat.exists
      with_items: role_config.results
