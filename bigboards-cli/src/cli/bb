#!/bin/bash
# -- ----------------------------------------------------------------------- --
# -- bb : BigBoards management script
# -- ----------------------------------------------------------------------- --
ACTION=${1}
OPERATION=${2}
DIR=$(dirname "$(readlink -f ${BASH_SOURCE[0]})" )

if [[ $EUID -eq 0 ]];
then
   echo "The BB command may not be run as root"
   exit 1
fi

# Check if the hosts file exists inside the /opt/bb directory
HOSTSFILE=/opt/bb/hosts
[ ! -f "$HOSTSFILE" ] && HOSTSFILE=/etc/ansible/hosts
PLAYBOOK="ansible-playbook -i ${HOSTSFILE}"

askForInit() {
    echo
    echo
    echo "################################################################################"
    echo "##                                                                            ##"
    echo "##                            I M P O R T A N T                               ##"
    echo "##                                                                            ##"
    echo "##     The cluster has not been initialized yet. You can do so by running     ##"
    echo "##                                                                            ##"
    echo "##                             bb system init                                 ##"
    echo "##                                                                            ##"
    echo "################################################################################"
    echo
    echo
}

verifyPrerequisites() {
    if [ "$ACTION" = "system" ] && [ "$OPERATION" = "init" ]; then
        return
    fi

    if [ ! -e "/usr/bin/ansible" ] || [ ! -e "/etc/ansible/hosts" ]; then
        askForInit
        exit 1
    else
        VALID_ANSIBLE_HOSTS=$(grep "\[host-coordinators\]" /etc/ansible/hosts | wc -l)
        if [ "$VALID_ANSIBLE_HOSTS" == "0" ]; then
            askForInit
            exit 1
        fi
    fi
}

validateTintBuilder() {
    [ ! -e "${HOME}/.tint-builder" ] && echo "No .tint-builder file found in the home directory of ${USER} " && exit 8;
    source "${HOME}/.tint-builder"

    [ -z "${BB_USERNAME}" ] && echo "BB_USERNAME not set" && exit 7;
    [ -z "${BB_EMAIL}" ] && echo "BB_EMAIL not set" && exit 7;
    [ -z "${BB_PASSWORD}" ] && echo "BB_PASSWORD not set" && exit 7;
}

verifyPrerequisites

MOD_PATH="$DIR/ansible"
MOD_FOUND="no"
for OPT in $@; do
    if [ "$OPT" = "help" ]; then
        MOD_FOUND="yes"
        if [ -e "$MOD_PATH/module" ]; then
            source "$MOD_PATH/module"
            moduleInfo
        fi
    else
        # -- check if the directory has a module or if it is a container for other operations
        if [ -e "$MOD_PATH/$OPT/command" ]; then
            MOD_FOUND="yes"
            source "$MOD_PATH/$OPT/command"
            moduleExecute $@

            RET=$?
            if [[ $RET != 0 ]]; then
                commandInfo
                exit $RET
            fi
        else
            MOD_PATH="$MOD_PATH/$OPT"
        fi
    fi
done

if [ "$MOD_FOUND" = "no" ]; then
    echo "Error:  No module could be found for $@"
    echo
    echo "Available Modules:"

    modules=$(ls ${DIR}/ansible)
    for module in $modules; do
        echo "  - $module"
    done

    echo
    echo "run '$0 <module> help' to get more information about a specific module and its commands"
    echo
fi
