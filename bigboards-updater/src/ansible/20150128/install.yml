---
- hosts: host
  sudo: yes
  tasks:
    - shell: date

## ####################################################################################################################
## ANSIBLE
## ####################################################################################################################
- hosts: host-coordinators
  sudo: yes
  tasks:
    - name: be sure host key checking is disabled
      lineinfile:
        dest: '/etc/ansible/ansible.cfg'
        regexp: 'host_key_checking '
        insertafter: '^#host_key_checking '
        line: 'host_key_checking = False'

## ####################################################################################################################
## HDD
## ####################################################################################################################
- hosts: host
  sudo: yes
  tasks:
    - name: be sure the harddisk is initialized
      shell: creates=/dev/sda1 parted -s /dev/sda mklabel msdos mkpart primary 0% 100%

    - name: be sure the harddrive filesystem has been created
      shell: creates=/root/.sda1.initialized mkfs.ext4 /dev/sda1 && touch /root/.sda1.initialized

    - name: be sure the data mountpoint exists
      file: state=directory path=/data owner=bb group=bigboards

    - name: be sure the correct FSTAB file is installed
      template: src=templates/etc/fstab-{{ ansible_machine }} dest=/etc/fstab

    - name: be sure the data directory is mounted
      shell: creates=/data/lost+found mount /data

## ####################################################################################################################
## NTP
## ####################################################################################################################
- hosts: host
  sudo: yes
  tasks:
    - name: make sure the ntp daemon is installed
      apt:
        name: 'ntp'
        state: 'latest'

    - name: make sure the ntpd.conf file is up to date
      template:
        src: 'templates/etc/ntpd.conf'
        dest: '/etc/ntpd.conf'

  handlers:
    - name: Restart NTPD
      service:
        name: 'ntp'
        state: 'restarted'

## ####################################################################################################################
## DNSMASQ
## ####################################################################################################################
- hosts: host-coordinators
  sudo: yes
  tasks:
    - name: make sure the software is installed
      apt:
        name: "{{ item }}"
        state: "latest"
      with_items:
        - dnsmasq

    - name: make sure a correct hosts file is being used
      template:
          src: "templates/etc/hosts-master"
          dest: "/etc/hosts"
      notify: Restart DNSMasq

    - name: make sure the correct dnsmasq file is being used
      template:
          src: "templates/etc/dnsmasq.conf"
          dest: "/etc/dnsmasq.conf"
      notify: Restart DNSMasq

  handlers:
    - name: Restart DNSMasq
      service:
        name: 'dnsmasq'
        state: 'restarted'

- hosts: host-workers
  sudo: yes
  tasks:
    - name: make sure a correct hosts file is being used
      template:
          src: "templates/etc/hosts-worker"
          dest: "/etc/hosts"

## ####################################################################################################################
## AVAHI
## ####################################################################################################################
- hosts: host
  sudo: yes
  tasks:
    - name: make sure the avahi configuration file is up to date
      template:
        src: "templates/etc/avahi/avahi-daemon.conf"
        dest: "/etc/avahi/avahi-daemon.conf"
      notify: Restart Avahi

    - name: make sure the avahi-daemon init file is up to date
      template:
        src: "templates/etc/init/avahi-daemon.conf"
        dest: "/etc/init/avahi-daemon.conf"
      notify: Restart Avahi

    - name: make sure avahi is started and will start on boot
      service:
        name: "avahi-daemon"
        state: "running"
        enabled: "yes"

  handlers:
    - name: Restart Avahi
      service:
        name: 'avahi-daemon'
        state: 'restarted'

## ####################################################################################################################
## BUTTERFLY
## ####################################################################################################################
- hosts: host
  sudo: yes
  tasks:
    - name: make sure the software is installed
      apt:
        name: "{{ item }}"
        state: "latest"
      with_items:
        - libffi-dev
        - supervisor
        - python-dev
        - python-setuptools

    - name: make sure supervisor runs as the root user
      template:
        src: "templates/etc/init.d/supervisor"
        dest: "/etc/init.d/supervisor"
      notify: Restart Supervisor

    - name: make sure supervisor is started and will start at boot
      service:
        name: "supervisor"
        state: "started"
        enabled: "yes"

    # Ubuntu 14.04 or some install/upgrade seems to break
    # pip in combination with the requests module
    #
    # http://stackoverflow.com/questions/27318535/pip-install-traceback-error-while-installing-packages-in-python
    # https://bugs.launchpad.net/ubuntu/+source/python-pip/+bug/1306991
    #
    # suggested fix = easy_install -U pip
    #
    # Not sure if this is the best approach as we loose control over the exact version that's being installed.
    # Or would if be better to keep our Hexes at the latest Ubuntu version (apt-get upgrade)?
    - name: make sure pip is upgraded
      shell: easy_install -U pip

    - name: make sure butterfly is installed
      pip:
        name: "butterfly"
        state: "present"

    - name: make sure the butterfly supervisord file is up to date
      template:
        src: "templates/etc/supervisor/conf.d/butterfly.conf"
        dest: "/etc/supervisor/conf.d/butterfly.conf"
      notify: Restart Butterfly

  handlers:
    - name: Restart Butterfly
      supervisorctl:
        name: "butterfly"
        state: "restarted"
    - name: Restart Supervisor
      supervisorctl:
        name: "supervisor"
        state: "restarted"

## ####################################################################################################################
## SERF
## ####################################################################################################################
- hosts: host
  sudo: yes
  tasks:
    - name: be sure the serf home directoy has been created
      file:
        path: '{{item}}'
        state: 'directory'
      with_items:
        - '/etc/serf'
        - '/opt/serf'
        - '/opt/serf/bin'

    - name: be sure serf is installed
      copy:
        src: 'files/opt/serf/bin/serf-{{ansible_machine}}'
        dest: '/opt/serf/bin/serf'
        mode: 755
      notify: Restart Serf

    - name: be sure there is a link to serf
      file:
        src: "/opt/serf/bin/serf"
        dest: "/usr/bin/serf"
        state: "link"

    - name: be sure the serf files are up to date
      template:
        src: 'templates/{{ item }}'
        dest: '/{{ item }}'
      with_items:
        - etc/default/serf
        - etc/init/serf.conf
        - etc/network/if-down.d/serf
        - etc/network/if-up.d/serf
        - etc/dhcp/dhclient-exit-hooks.d/serf
      notify: Restart Serf

    - name: be sure serf has the right configuration
      template:
        src: 'templates/etc/serf/serf.conf'
        dest: '/etc/serf/serf.conf'
      notify: Restart Serf

  handlers:
    - name: Restart Serf
      service:
        name: 'serf'
        state: 'restarted'

## ####################################################################################################################
## DOCKER.IO
## ####################################################################################################################
- hosts: host
  sudo: yes
  tasks:
    - name: be sure docker is installed ( + dependencies )
      apt:
        name: '{{ item }}'
        state: 'latest'
      with_items:
        - docker.io
        - python-pip
        - python-dev
        - build-essential
      notify: Restart Docker

    - name: be sure the requests for python are removed
      file:
        path: '/usr/local/lib/python2.7/dist-packages/requests'
        state: 'absent'
      notify: Restart Docker

    - name: be sure the docker python bindings are installed
      pip:
        name: 'docker-py'
        state: 'latest'
      notify: Restart Docker

    - name: be sure the docker version is up to date
      copy:
        src: 'files/usr/bin/docker-1.3.0-{{ansible_machine}}'
        dest: '/usr/bin/docker'
      notify: Restart Docker

  handlers:
    - name: Restart Docker
      command: service docker.io restart
