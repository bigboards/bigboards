<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>bigboards</artifactId>
        <groupId>io.bigboards</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>bigboards-mmc-api</artifactId>

    <build>
        <plugins>
            <!-- disable default maven plugin to deploy to nexus repo -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <configuration>
                            <target>
                                <!--
                                SCM doesn't contain dependencies, so we need to install them
                                they are placed locally in node_modules folder
                                private dependencies are extracted using maven-dependency-plugin
                                We don't fail on error so our build might work offline if all NPM modules
                                were loaded before.
                                -->
                                <echo message="========== installing public dependencies ===================" />
                                <exec executable="npm" dir="${project.basedir}" failonerror="false">
                                    <arg value="install" />
                                </exec>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>test</id>
                        <phase>test</phase>
                        <configuration>
                            <target>
                                <!--
                                runs tests and exports results in specified location so Jenkins can find them
                                doesn't fail on error because we want Jenkins to pick up failed tests
                                -->
                                <echo message="========== running tests ===================" />
                                <exec executable="npm" dir="${project.basedir}" failonerror="true">
                                    <arg value="test" />
                                </exec>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>package</id>
                        <phase>package</phase>
                        <configuration>
                            <target>
                                <!--
                                runs tests and exports results in specified location so Jenkins can find them
                                doesn't fail on error because we want Jenkins to pick up failed tests
                                -->
                                <echo message="========== packaging debs ===================" />
                                <exec executable="./redeb.sh" dir="${project.basedir}/deb" failonerror="true">
                                    <arg value="${project.basedir}" />
                                </exec>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>deploy</id>
                        <phase>deploy</phase>
                        <configuration>
                            <target>
                                <!--
                                copy the deb package to the central deployment folder
                                -->
                                <echo message="========== deploy debs ===================" />
                                <copy todir="${central.deploy.dir}">
                                    <fileset dir="${project.basedir}/target/dist/">
                                        <include name="**/*.deb"/>
                                    </fileset>
                                </copy>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>0.0.16</version>
                <executions>
                    <execution>
                        <id>install node and npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        <configuration>
                            <nodeVersion>v0.10.33</nodeVersion>
                            <npmVersion>1.4.28</npmVersion>
                        </configuration>
                    </execution>

                    <execution>
                        <id>npm install</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <!-- Optional configuration which provides for running any npm command -->
                        <configuration>
                            <arguments>install</arguments>
                        </configuration>
                    </execution>

                    <execution>
                        <id>grunt build</id>
                        <goals>
                            <goal>grunt</goal>
                        </goals>

                        <configuration>
                            <arguments>build:dist</arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <!-- none -->
    </dependencies>
</project>
